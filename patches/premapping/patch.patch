Index: src/main/java/com/destroystokyo/paper/util/PlayerMobDistanceMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/destroystokyo/paper/util/PlayerMobDistanceMap.java	(revision ba4198d0b1aaf62c48a9a2fc54d05ce25ab6a89a)
+++ src/main/java/com/destroystokyo/paper/util/PlayerMobDistanceMap.java	(date 1588292864721)
@@ -3,6 +3,7 @@
 import it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet;
+import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
 import net.minecraft.server.ChunkCoordIntPair;
 import net.minecraft.server.EntityPlayer;
 import net.minecraft.server.SectionPosition;
@@ -76,7 +77,7 @@
         final int centerX = currPosition.getX();
         final int centerZ = currPosition.getZ();
 
-        for (final Long2ObjectLinkedOpenHashMap.Entry<PooledHashSets.PooledObjectLinkedOpenHashSet<EntityPlayer>> entry : this.playerMap.long2ObjectEntrySet()) {
+        for (final Long2ObjectMap.Entry<PooledHashSets.PooledObjectLinkedOpenHashSet<EntityPlayer>> entry : this.playerMap.long2ObjectEntrySet()) {
             final long key = entry.getLongKey();
             final PooledHashSets.PooledObjectLinkedOpenHashSet<EntityPlayer> map = entry.getValue();
 
Index: src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java	(revision ba4198d0b1aaf62c48a9a2fc54d05ce25ab6a89a)
+++ src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java	(date 1588292842711)
@@ -3,6 +3,7 @@
 import com.destroystokyo.paper.util.math.IntegerUtil;
 import it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
+import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap;
 import net.minecraft.server.ChunkCoordIntPair;
@@ -134,10 +135,10 @@
         final int centerX = MCUtil.getCoordinateX(currPosition);
         final int centerZ = MCUtil.getCoordinateZ(currPosition);
 
-        for (Iterator<Long2ObjectLinkedOpenHashMap.Entry<PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<E>>> iterator = this.areaMap.long2ObjectEntrySet().fastIterator();
+        for (Iterator<Long2ObjectMap.Entry<PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<E>>> iterator = this.areaMap.long2ObjectEntrySet().fastIterator();
              iterator.hasNext();) {
 
-            final Long2ObjectLinkedOpenHashMap.Entry<PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<E>> entry = iterator.next();
+            final Long2ObjectMap.Entry<PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<E>> entry = iterator.next();
             final long key = entry.getLongKey();
             final PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<E> map = entry.getValue();
 
